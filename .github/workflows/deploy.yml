name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: |
          docker build -t commerce-app .

      - name: Save Docker image to a file
        run: |
          docker save -o commerce-app.tar commerce-app

      - name: Copy Docker image and necessary files via SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa commerce-app.tar ec2-user@$EC2_HOST:/home/ec2-user/
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa docker-compose.yml ec2-user@$EC2_HOST:/home/ec2-user/docker-compose.yml
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa .env ec2-user@$EC2_HOST:/home/ec2-user/.env
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -r database ec2-user@$EC2_HOST:/home/ec2-user/

      - name: Load Docker image and deploy containers on EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@$EC2_HOST << 'EOF'
            cd /home/ec2-user/
            docker load -i commerce-app.tar
            # 종료하려는 포트를 사용하는 프로세스 식별 및 종료
            sudo fuser -k 8080/tcp
            docker-compose down
            docker rm -f $(docker ps -aq) || true
            docker-compose up -d
          EOF
